expression = { function | prefix_operation | infix_operation | function_parameter };
function = { infix_operation | prefix_operation | function, math_operator, infix_operation | prefix_operation, function } ;
prefix_operation = letter, letter, word, "(", { prefix_operation_parameter | prefix_operation, "," }, prefix_operation_parameter | prefix_operation, ")" ;
prefix_operation_parameter = function_parameter | infix_operation ;

infix_operation = infix_operation | function_parameter , math_operator, function_parameter | infix_operation;

//infix_function = { ["("] infix_operation, math_operator, infix_operation | function_parameter, [")"] }

infix_function = { ["("] , infix_operation, [")"] }
infix_operation = function_parameter, infix_operation' ;
infix_operation' = math_operator, function_parameter, infix_operation' , infix_operation' | ε ;


infix_operation = ["("], function_parameter, infix_operation' , math_operator, function_parameter, infix_operation' ,  [")"];
infix_operation_parameter = function_parameter, infix_operation';
infix_operation' = infix_operation'  | ε ;

function_parameter = variable | number ;
variable = letter, word ;
word = { letter | digit } ;
number = ["-"], digit, { digit }, [ ".",  { digit } ] ;
math_operator = "<" | ">" | "+" | "-" | "*" | "/";
letter = "a" | "b"| "c" | "d" | "e" | "f" | "g" | "h" | "i"
       | "j" | "k" | "l" | "m" | "n" | "o" | "p"
       | "q" | "r" | "s" | "t" | "u" | "v" | "w"
       | "x" | "y" | "z" ;
digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;